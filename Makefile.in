
# Makefile for hdf-dods.
#
# $Id: Makefile.in,v 1.10 1998/07/13 20:26:31 jimg Exp $

@SET_MAKE@

PROGS = hdf_dods hdf_das hdf_dds libhdf-dods.a

DODS_ROOT = ../..
WWW_ROOT = @WWW_ROOT@

INCS = -I. -I$(DODS_ROOT)/include -Isrc -Ihdfclass/src @INCS@ 
DEFS = @DEFS@ -DUSE_LIBGXX_INLINES -DHAVE_CONFIG_H
CPPFLAGS = @CPPFLAGS@ $(DEFS) $(INCS)
CXXFLAGS = @CXXFLAGS@ -Wall
LDFLAGS = @LDFLAGS@ -L. -L$(DODS_ROOT)/lib -Lhdfclass
LIBS = -lhdf-dods -ldap++ -lhdf-dods -ldap++ -lhdfclass @LIBS@

# Set the instalation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
includedir = $(prefix)/include
manext = 1
mandir = $(prefix)/man/man$(manext)

src = $(DODS_ROOT)/src
etcdir = $(DODS_ROOT)/etc

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
version = @VERSION@
dir = hdf-dods-@VERSION@

# names of key programs

LN_S = @LN_S@
CP = cp
CXX = @CXX@
AR = ar
TAGS = etags
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
STRIP = strip

vpath %.h src
vpath %.cc src

HDFOBJS = HDFArray.o HDFByte.o HDFFloat64.o HDFFunction.o HDFGrid.o \
	  HDFInt32.o HDFUInt32.o HDFList.o HDFSequence.o HDFStr.o \
	  HDFStructure.o HDFUrl.o hdfdesc.o hc2dap.o dhdferr.o \
	  hdfutil.o dodsutil.o

DDSOBJS = hdf_dds.o
DASOBJS = hdf_das.o
SRVOBJS = hdf_dods.o funcs.o

all:	HDFClass $(PROGS)

HDFClass:
	cd ./hdfclass; $(MAKE) $(MFLAGS)

libhdf-dods.a:	$(HDFOBJS)
	ar ru libhdf-dods.a $(HDFOBJS)

hdf_dds: $(DDSOBJS) libhdf-dods.a
	$(CXX) $(DDSOBJS) -o hdf_dds $(LDFLAGS) $(LIBS)

hdf_das: $(DASOBJS) libhdf-dods.a
	$(CXX) $(DASOBJS) -o hdf_das $(LDFLAGS) $(LIBS)

hdf_dods: $(SRVOBJS) libhdf-dods.a
	$(CXX) $(SRVOBJS) -o hdf_dods $(LDFLAGS) $(LIBS)

srvtest: srvtest.o libhdf-dods.a
	$(CXX) srvtest.o -o srvtest $(LDFLAGS) $(LIBS)

escfilt: escfilt.o libhdf-dods.a
	$(CXX) escfilt.o -o escfilt $(LDFLAGS) $(LIBS)

clean:
	-rm *.o $(PROGS)
	-cd hdfclass && $(MAKE) $(MFLAGS) clean

distclean: clean
	-rm config.* Makefile

install: all
	$(INSTALL_PROGRAM) -s ./hdf_das $(etcdir)
	$(INSTALL_PROGRAM) -s ./hdf_dds $(etcdir)
	$(INSTALL_PROGRAM) -s ./hdf_dods $(etcdir)
	$(INSTALL_PROGRAM) ./nph-hdf $(etcdir)

.SUFFIXES:      .o .cc .c

.c.o:
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

.PHONY: depend
depend: 
	> dependencies
	@depend@ -m dependencies -- $(CPPFLAGS) -I@GPP_INC@ -- \
	src/*.cc
	cd hdfclass && $(MAKE) $(MFLAGS) depend && cd ..

# This is a special tar target because it builds not only the tar file for
# the core software but also the lib, etc, and bin directories. It assumes
# that the root directory for DODS is called `DODS' (no version number).
.PHONY: tar
tar:
	@echo "You should first run distclean in DODS_ROOT!"
	@echo "(ignore this if you have)"
	cd $(DODS_ROOT)/.. && \
	tar --exclude '*/old' --exclude '*/.#*' --exclude '*/CVS' \
	    --gzip --create --dereference --file DODS-$(dir).tar.gz \
	    DODS/src/$(dir)

.PHONY: update-version
update-version: check-version
	@echo "Version is: `cat version.h`"
	mv ../hdf-dods* ../hdf-dods-$(version)

# Compare the version encoded in this Makefile (set by configure) with the
# version in version.h. The version make variable is set up near the top of
# the Makefile.
.PHONY: check-version
check-version:
	@echo "Checking for version.h and Makefile version match-up"
	@if [ "$(version)" != "`cat version.h`" ]; \
	then \
		echo "You must manually re-run configure!"; \
		exit 1; \
	else \
		echo "Yes, they match."; \
	fi

.PHONY: tags
tags:
	$(TAGS) $(TAGS_FLAGS) *.cc *.h *.lex *.y
include dependencies

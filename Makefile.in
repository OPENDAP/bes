
# Makefile for hdf-dods.
#
# $Id: Makefile.in,v 1.36 2004/07/09 18:08:50 jimg Exp $

@SET_MAKE@

PROGS = hdf_handler libhdf-dods.a

DODS_ROOT = @dods_relative@

INCS = -I. -I.. -Ihdfclass @INCS@ 
DEFS = @DEFS@
CPPFLAGS = @CPPFLAGS@ $(DEFS) $(INCS)
CXXFLAGS_DEBUG = -g3 -O0 -Wall -fno-default-inline -fno-defer-pop
# CXXPROF = -pg --profile-arcs
CXXFLAGS = @CXXFLAGS@ -Wall $(CXXPROF)
# LDPROF = -pg
LDFLAGS = @LDFLAGS@ -L. -Lhdfclass $(LDPROF)
LFLAGS = -8
YFLAGS = -d -v
LIBS = -lhdf-dods -ldap++ -lhdf-dods -ldap++ -lhdfclass @LIBS@

# Set the installation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = @prefix@
exec_prefix = $(prefix)
bindir = $(exec_prefix)bin
libdir = $(exec_prefix)lib
includedir = $(prefix)include
manext = 1
mandir = $(prefix)man/man$(manext)

src = $(DODS_ROOT)src
etcdir = $(DODS_ROOT)etc

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
version = @VERSION@
basedir = hdf-dods
dir = $(basedir)-$(version)
host = @host@

COMPONENT_NAME = DODS HDF Server

# testsuite specifics
RUNTEST = runtest
RUNTESTFLAGS = #--all --verbose
TESTDIR = @testurl@

# names of key programs

LN_S = @LN_S@
CP = cp
AWK = @AWK@
PERL = @PERL@
TAR = @TAR@
CXX = @CXX@
YACC = @YACC@
LEX = @LEX@
AR = ar
TAGS = etags
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
STRIP = strip

#vpath %.h src
#vpath %.cc src

HDFOBJS = HDFArray.o HDFByte.o HDFFloat64.o HDFGrid.o \
	  HDFInt32.o HDFUInt32.o HDFSequence.o HDFStr.o \
	  HDFStructure.o HDFUrl.o hdfdesc.o hc2dap.o dhdferr.o \
	  hdfutil.o hdfeos.tab.o lex.hdfeos.o HDFInt16.o \
	  HDFUInt16.o HDFFloat32.o

SRVOBJS = hdf_handler.o funcs.o

all:	HDFClass $(PROGS)

HDFClass:
	cd ./hdfclass; $(MAKE) $(MFLAGS)

# Build the HDF-EOS parser

hdfeos.tab.c hdfeos.tab.h: hdfeos.y
	$(YACC) $(YFLAGS) -p hdfeos hdfeos.y

hdfeos.tab.o: hdfeos.tab.c	# build using C++ compiler
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c hdfeos.tab.c -o hdfeos.tab.o

# Build the HDF-EOS scanner

lex.hdfeos.c: hdfeos.lex hdfeos.tab.c hdfeos.tab.h
	$(LEX) $(LFLAGS) -Phdfeos hdfeos.lex
#	rm hdfeos.lex

lex.hdfeos.o: lex.hdfeos.c
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c lex.hdfeos.c -o lex.hdfeos.o

eosdas-test: eosdas-test.o lex.hdfeos.o hdfeos.tab.o libhdf-dods.a HDFClass
	$(CXX) -o eosdas-test eosdas-test.o $(LDFLAGS) $(LIBS)

libhdf-dods.a:	$(HDFOBJS)
	ar ru libhdf-dods.a $(HDFOBJS)

hdf_handler: $(SRVOBJS) libhdf-dods.a hdfclass/libhdfclass.a
	$(CXX) $(SRVOBJS) -o hdf_handler $(LDFLAGS) $(LIBS)

srvtest: srvtest.o libhdf-dods.a
	$(CXX) srvtest.o -o srvtest $(LDFLAGS) $(LIBS)

escfilt: escfilt.o libhdf-dods.a
	$(CXX) escfilt.o -o escfilt $(LDFLAGS) $(LIBS)

clean:
	-rm *.o $(PROGS) core eosdas-test *~
	-cd hdfclass && $(MAKE) $(MFLAGS) clean

distclean: clean
	-rm config.*

install: all
	$(INSTALL_PROGRAM) -s ./hdf_handler $(etcdir)

configure: configure.in $(DODS_ROOT)etc/aclocal.m4
	autoconf --localdir=$(DODS_ROOT)etc

Makefile: Makefile.in
	if [ -x ./config.status ]; \
	then \
	    ${SHELL} ./config.status; \
	else \
	    ./configure; \
	fi

check:
	${RUNTEST} ${RUNTESTFLAGS} --tool geturl --srcdir hdf-testsuite

# Bad
#  	rootme=`pwd` && export rootme && export TESTDIR="$(TESTDIR)" && \

.SUFFIXES:      .o .cc .c

.c.o:
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

.PHONY: depend
depend: 
	@depend@ -m Makefile.in -- $(CPPFLAGS) -- *.cc
	cd hdfclass && $(MAKE) $(MFLAGS) depend

# This is a special tar target because it builds not only the tar file for
# the core software but also the lib, etc, and bin directories. It assumes
# that the root directory for DODS is called `DODS' (no version number).
.PHONY: tar
tar:
	-rm -r config.cache config.log config.status
	cd $(DODS_ROOT)/.. && \
	$(TAR) --exclude 'old' --exclude '.#*' --exclude 'CVS' \
	    --exclude '.flc' --exclude 'Makefile' \
            --gzip --create --dereference \
	    --file DODS-$(dir).tar.gz DODS/src/$(dir)

# Creates tar files for binary distributions.
#
.PHONY: binary-tar
binary-tar:
	cd $(DODS_ROOT).. && \
	$(TAR) --gzip --create \
	    --file DODS-hdf-server-$(version)-$(host).tar.gz \
            DODS/NEWS \
            DODS/docs/README DODS/docs/README-hdf-server \
	    DODS/etc/hdf_handler

.PHONY: update-version
update-version: check-version
	@echo "Version is: `cat version.h`"
	if test ! -d ../$(dir); then mv ../$(basedir)* ../$(dir); fi
	if test ! -f $(DODS_ROOT)VERSION; then touch $(DODS_ROOT)VERSION; fi
	$(etcdir)/update-manifest.pl "$(COMPONENT_NAME)" $(version) \
		< $(DODS_ROOT)VERSION > tmp.dods.manifest
	mv tmp.dods.manifest $(DODS_ROOT)VERSION

# Compare the version encoded in this Makefile (set by configure) with the
# version in version.h. The version make variable is set up near the top of
# the Makefile.
.PHONY: check-version
check-version:
	@echo "Checking for version.h and Makefile version match-up"
	@if [ "$(version)" != "`cat version.h`" ]; \
	then \
		echo "You must manually re-run configure!"; \
		exit 1; \
	else \
		echo "Yes, they match."; \
	fi

.PHONY: tags
tags:
	(cd hdfclass && $(MAKE) $(MFLAGS) tags)
	$(TAGS) $(TAGS_FLAGS) --include=hdfclass/TAGS *.cc *.h 

# DO NOT DELETE; depend depends on this line.

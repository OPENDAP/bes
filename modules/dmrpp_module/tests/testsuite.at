# Process with autom4te to create an -*- Autotest -*- test suite.

AT_INIT([bes/modules/dmrpp_module/tests testsuite])

m4_include([../../../modules/handler_tests_macros.m4])

dnl Using the file:/... URLs
AT_BESCMD_RESPONSE_TEST([contiguous/t_int_scalar.h5.dmr])
AT_BESCMD_RESPONSE_TEST([contiguous/t_int_scalar.h5.das])
AT_BESCMD_RESPONSE_TEST([contiguous/t_int_scalar.h5.dds])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/t_int_scalar.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/t_int_scalar.h5.dods])

AT_BESCMD_RESPONSE_TEST([contiguous/d_int.h5.dmr])
AT_BESCMD_RESPONSE_TEST([contiguous/d_int.h5.das])
AT_BESCMD_RESPONSE_TEST([contiguous/d_int.h5.dds])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/d_int.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/d_int.h5.dods])

AT_BESCMD_RESPONSE_TEST([contiguous/grid_2_2d.h5.dmr])
AT_BESCMD_RESPONSE_TEST([contiguous/grid_2_2d.h5.das])
AT_BESCMD_RESPONSE_TEST([contiguous/grid_2_2d.h5.dds])
dnl Broken. Fix these by implementing DmrppStr. jhrg 4/25/18
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/grid_2_2d.h5.dap], xpass)
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/grid_2_2d.h5.dods], xpass)

AT_BESCMD_RESPONSE_TEST([contiguous/coads_climatology.dmr])
AT_BESCMD_RESPONSE_TEST([contiguous/coads_climatology.das])
AT_BESCMD_RESPONSE_TEST([contiguous/coads_climatology.dds])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/coads_climatology.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/coads_climatology.dods])

dnl Constrained data responses
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/coads_climatology2.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/coads_climatology2.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/grid_2_2d.h5.2.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/grid_2_2d.h5.2.dods])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/grid_2_2d.h5.3.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([contiguous/grid_2_2d.h5.3.dods])

dnl Check netCDF's var name = dimension name handling
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([contiguous/nc4_group_var_dim_name_same.h5.dap])

dnl Read chunked data

AT_BESCMD_RESPONSE_TEST([chunked/fletcher32.nc4.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/fletcher32.nc4.dap])

AT_BESCMD_RESPONSE_TEST([chunked/fletcherShuffle.nc4.dmr])
dnl removed for now, will fix at a later date, SBL 10.28.21
# AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/fletcherShuffle.nc4.dap])

AT_BESCMD_RESPONSE_TEST([chunked/chunked_oneD.h5.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD.h5.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD.h5.2.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD.h5.3.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD.h5.4.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD.h5.5.dap])

AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_oneD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.2.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.3.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.4.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.5.dap])

AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_oneD_uneven.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_twoD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_twoD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_twoD_asymmetric.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_twoD_asymmetric.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_twoD_uneven.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_twoD_uneven.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_threeD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD.h5.dods])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD.h5.2.dods])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD.h5.3.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_threeD_asymmetric.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD_asymmetric.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_threeD_asymmetric_uneven.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD_asymmetric_uneven.h5.dods])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_threeD_asymmetric_uneven.h5.2.dods])

dnl The four dim files make output so large that the print representation of the
dnl values does not work on linux - it switches to scientific notation at some
dnl point. Constrain these accesses to limit the size. I have verified that the
dnl data access does work. jhrg 4/27/18
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_fourD.h5.dods])

dnl These tests look at subsetting one dimension to a single value, the start
dnl index and the end index.jhrg 4/27/18
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.2.dap])

dnl This test is a good idea, but the float representations are not reliable
dnl across different machines. I set the CEs so that only integer values are
dnl extracted to simplify the testing. jhrg 4/27/18

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.3.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.4.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.5.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.6.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_fourD.h5.7.dap])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_gzipped_fourD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_gzipped_fourD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_gzipped_oneD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_gzipped_oneD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_gzipped_threeD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_gzipped_threeD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_gzipped_twoD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_gzipped_twoD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shuffled_fourD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shuffled_fourD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shuffled_oneD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shuffled_oneD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shuffled_threeD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shuffled_threeD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shuffled_twoD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shuffled_twoD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shufzip_fourD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shufzip_fourD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shufzip_oneD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shufzip_oneD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shufzip_threeD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shufzip_threeD.h5.dods])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([chunked/chunked_shufzip_twoD.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([chunked/chunked_shufzip_twoD.h5.dods])

dnl Test new types - jhrg 5/24/18
dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/chunked_scalar_string.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/chunked_scalar_string.h5.dods], [xfail])

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/chunked_string_array.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/chunked_string_array.h5.dods], [xfail])

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/chunked_compound.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/chunked_compound.h5.dods], [xfail])

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/chunked_enum.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/chunked_enum.h5.dods], [xfail])

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/chunked_opaque.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/chunked_opaque.h5.dods], [xfail])

dnl AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/ntypes.h5.dap], [xfail])
dnl AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/ntypes.h5.dods], [xfail])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([new_types/nc4_group_atomic.h5.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([new_types/nc4_group_atomic.h5.dods])


dnl - Compact layout tests ------------------------------------------

dnl DAP4
AT_BESCMD_RESPONSE_TEST([compact/ATL03_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/ATL03_compact.dap])

dnl DAP4 + DAP2
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/string_array_compact.dap])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact.dds])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/string_array_compact.dods])

dnl !!!!!!!!!!    START HERE    !!!!!!!!!!!!!!!

AT_BESCMD_RESPONSE_TEST([compact/int8_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/int8_array_compact.dap])

AT_BESCMD_RESPONSE_TEST([compact/int32_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/int32_array_compact.dap])
AT_BESCMD_RESPONSE_TEST([compact/int32_array_compact.dds])
AT_BESCMD_RESPONSE_TEST([compact/int32_array_compact.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/int32_array_compact.dods])

AT_BESCMD_RESPONSE_TEST([compact/int64_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/int64_array_compact.dap])

AT_BESCMD_RESPONSE_TEST([compact/float32_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/float32_array_compact.dap])
AT_BESCMD_RESPONSE_TEST([compact/float32_array_compact.dds])
AT_BESCMD_RESPONSE_TEST([compact/float32_array_compact.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/float32_array_compact.dods])

AT_BESCMD_RESPONSE_TEST([compact/float64_array_compact.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/float64_array_compact.dap])
AT_BESCMD_RESPONSE_TEST([compact/float64_array_compact.dds])
AT_BESCMD_RESPONSE_TEST([compact/float64_array_compact.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/float64_array_compact.dods])

AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_release.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/string_array_compact_release.dap])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_release.dds])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_release.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/string_array_compact_release.dods])

AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_version.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/string_array_compact_version.dap])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_version.dds])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_version.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/string_array_compact_version.dods])

AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_utc.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/string_array_compact_utc.dap])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_utc.dds])
AT_BESCMD_RESPONSE_TEST([compact/string_array_compact_utc.das])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([compact/string_array_compact_utc.dods])

dnl scalar variable tests for the compact storage
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/Scalar_compact.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/Scalar_compact_str.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([compact/Scalar_compact_vlstr.dap])


AT_BESCMD_RESPONSE_TEST([fill_value/fvalue.dmr])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue.dds])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue.das])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([fill_value/fvalue.dods])

AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_chunk.dmr])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_chunk.dds])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_chunk.das])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunk.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([fill_value/fvalue_chunk.dods])

AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_scalar.dmr])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_scalar.dds])
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_scalar.das])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_scalar.dap])
AT_BESCMD_BINARY_DAP2_RESPONSE_TEST([fill_value/fvalue_scalar.dods])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_scalar_compact.dap])


AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunks_all_fill.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunks_fill_not_write.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunks_fill_notdefined.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunks_some_fill.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_compact_all_fill.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_cont_some_fill.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_cont_all_fill.dap])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_chunks_with_fill_ce.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_cont_some_fill_ce.dap])

AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_fd.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_int64.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_uint64.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_int8.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_uint8.dap])

# Test fill values plus compression. jhrg 5/25/22
AT_BESCMD_RESPONSE_TEST([fill_value/fvalue_compressed.dmr])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/fvalue_compressed.dap])

# Test fill value plus compression plus one chunk only ky 07/29/22
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/One_chunk_s_c.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/One_chunk_s_c_fvalue.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([fill_value/One_chunk_c_fv_undef.dap])


# Test chunked data where chunks are compressed twice (and thus must be
# inflated twice). The first file uses deflate once, the second uses it
# twice. jhrg 5/25/22

# A simple one chunk deflate twice case. KY 08/07/22
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/One_chunk_c_c.h5.dap])

AT_BESCMD_RESPONSE_TEST([deflate_twice/cmprss_big_1.h5.dmr])
# AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/cmprss_big_1.h5.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/cmprss_big_1.h5.ce.dap])

AT_BESCMD_RESPONSE_TEST([deflate_twice/cmprss_big_2.h5.dmr])
# AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/cmprss_big_2.h5.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/cmprss_big_2.h5.ce.dap])


#special case to deflate twice. The second inflate input buffer size is bigger than chunk size.
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/fill_some_chunks_c_c.h5.dap])
#Also add a shuffle + deflate + deflate special case.
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([deflate_twice/fill_some_chunks_s_c_c.h5.dap])

#############################################################################
# Arrays of Fixed Length String tests
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([string_arrays/t_str_dset.h5.dmrpp.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([string_arrays/t_string_chunk.h5.dmrpp.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([string_arrays/t_string_compact.h5.dmrpp.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([string_arrays/t_string_cont.h5.dmrpp.dap])
AT_BESCMD_BINARY_DAP4_RESPONSE_TEST([string_arrays/t_string_cstr.h5.dmrpp.dap])


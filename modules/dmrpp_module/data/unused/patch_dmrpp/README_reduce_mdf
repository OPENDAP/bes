I. Introduction

Since the missing data values in dmrpp of some granules may share the same values,
the dmrpp of these granules may point to the same missing data file. 
We provide a C++ program that can reduce the number of missing data files.
A patch python program that uses the above C++ program will patch all dmrpp files 
under this directory with the same missing data file if possible.
A recording file that stores the missing data file names and the corresponding
sha256 of the data values is necessary.
Run 
python ./patch_all_no_dup_mh5.py -i missing_data_sha256_recording_file

If everything works fine, you should see
"Successfully patch all dmrpp files under this directory."

To test the program, run 
python ./test_patch_no_dup_mh5.py

You should see "Tests succeed. All tests get passed." . 

More output can be generated by running the verbose options of the above python programs.

II. Testing data
Testing data can be found under the directory test_reduce_mdf_data. 
Among them, 
(1) d_int.h5.dmrpp doesn't have any missing variable values.
(2) grid_1_2d.h5.dmrpp and grid_1_2d_convention.h5.dmrpp share the same 
missing data file grid_1_2d_missing.h5.
(3) t_cf_1dllz.h5.dmrpp and t_cf_2dllz.h5.dmrpp share the same missing data
file t_cf_1dllz_missing.h5.
(4) mh5_sha256 records the missing data file name, the corresponding dmrpp file name
and the sha256 of the missing data values of the testing files.

III. How to compile the reduce_mdf.cc at MacOS

MacOS doesn't have support ssl and cryto. One needs to install these packages. 
One can install the packages under this directory:
/usr/local/opt/openssl

If one has the root permission, according to 
https://www.anintegratedworld.com/mac-osx-fatal-error-opensslsha-h-file-not-found/
Do the following:
> cd /usr/local/include 
> ln -s ../opt/openssl/include/openssl .
Compile reduce_mdf as follows: 
g++ -lssl -lcrypto -o reduce_mdf -L/usr/local/opt/openssl/lib reduce_mdf.cc
 
Or set the following environment variable 
CPLUS_INCLUDE_PATH=/usr/local/opt/openssl/include
and then compile reduce_mdf as follows:
g++ -lssl -lcrypto -o reduce_mdf -L/usr/local/opt/openssl/lib reduce_mdf.cc
 

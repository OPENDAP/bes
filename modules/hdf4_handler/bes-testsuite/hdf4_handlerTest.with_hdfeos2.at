# Copyright (C) The HDF Group
# All rights reserved.
#
# Process with autom4te to create an -*- Autotest -*- test suite.
#
# This test simple generic HDF4 files (same as the default handler),
# fake HDF-EOS2 files, and fake hybrid files. This script is a convenient
# way of testing all files with EnableCF=true option with HDF-EOS2 library.
# 
# It assumes that EnableCF is true in the bes.conf file 
# that --with-hdfeos2 is specified in the configuration script. 
# Please note that the --with-hdfeos2 option will trigger the use of 
# this file (i.e., hdf4_handlerTest.with_hdfeos2.at), not the default 
# hdf4_handlerTest.at file.
#
# See bes-testsuite/Makefile.am for details.
#
# The baseline files are under h4.with_hdfeos2/.
# You can copy baseline files from h4.generic/,  h4.hdfeos2.with_hdfeos2/,
# and h4.hybrid.with_hdfeos2/. Please note that generic HDF4 files are not
# affected by the use of --with-hdfeos2 option.
# 
# The "test.with_hdfeos2.sh" script uses this test autotest script.
#
# See also hdf4_hadnler.cf.at file.
#
# Author: Hyo-Kyung Lee (hyoklee@hdfgroup.org) Kent Yang (myang6@hdfgroup.org)
# Last Update: May 23, 2024
# -----------------------------------------------------------------------------
AT_INIT([bes.conf besstandalone getdap])
# AT_COPYRIGHT([])

AT_TESTED([besstandalone])

# Copy from the HDF5 handler.
# This option works only for macros that explicitly support it. The new
# macro AT_BESCMD_BESCONF_RESPONSE_TEST() does and provides a pattern for
# other macros, although we might be able to use the macros in the
# bes/modules/handler_tests_macros.m4 file.

AT_ARG_OPTION_ARG([baselines b],
    [--baselines=yes|no   Build the baseline file for parser test 'arg'],
    [echo "baselines set to $at_arg_baselines";
     baselines=$at_arg_baselines],[baselines=])

# This new macro expects that the bes.conf file used with besstandalone will be
# the second argument. This provides a more compact way to run tests with several
# different bes.conf files. Using the "BES.Include = <other file>" we can tweak
# parameters without copying the base bes.conf file. jhrg 3/11/22
#
# Usage: AT_BESCMD_BESCONF_RESPONSE_TEST([<bescmd file>], [<bes.conf>], [pass|xfail], [repeat|cached])
# The last two params are optional.
m4_define([AT_BESCMD_BESCONF_RESPONSE_TEST], [dnl

    AT_SETUP([$1 $2])
    AT_KEYWORDS([bescmd])

    input=$abs_srcdir/$1

    # Here the bes_conf var is set using parameter number 2. This shadows the
    # value that can be set using the optional -c (--conf) argument (see the top
    # of this file). We might improve on this! jhrg 3/11/22
    bes_conf=$abs_builddir/$2

    # The baseline needs to contain something to tie it to the bes conf file since
    # the same bescmd file may produce different output with a different bes conf.
    baseline=$abs_srcdir/$1.$2.baseline

    # Oddly, setting 'pass' to $3 and then using $pass in AT_XFAIL_IF() does not work,
    # but using $3 does. This might be a function of when the AT_XFAIL_IF() macro is
    # expanded. jhrg 3.20.20
    pass=$3
    repeat=$4

    AS_IF([test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached], [repeat="-r 3"])

    AS_IF([test -z "$at_verbose"], [echo "COMMAND: besstandalone $repeat -c $bes_conf -i $1"])

    AS_IF([test -n "$baselines" -a x$baselines = xyes],
        [
        AT_CHECK([besstandalone $repeat -c $bes_conf -i $input], [], [stdout])
        AT_CHECK([mv stdout $baseline.tmp])
        ],
        [
        AT_CHECK([besstandalone $repeat -c $bes_conf -i $input], [], [stdout])
        AT_CHECK([diff -b -B $baseline stdout])
        AT_XFAIL_IF([test z$3 = zxfail])
        ])

    AT_CLEANUP
])



# Usage: _AT_TEST_*(<bescmd source>, <baseline file>)

m4_define([_AT_BESCMD_TEST],   
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([bescmd])
# Use the following AT_CHECK to generate baseline file.
#AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 > $2 || true], [], [stdout], [stderr])

# This is the original.
AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 || true], [], [stdout], [stderr])
AT_CHECK([diff -b -B $2 stdout || diff -b -B $2 stderr], [], [ignore],[],[])
AT_CLEANUP])

m4_define([_AT_BESCMD_BINARYDATA_TEST],   
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([bescmd])
# Use the following AT_CHECK to generate baseline file.
#AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 | getdap -M - > $2 || true], [], [stdout], [stderr])

# This is the original.
AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 | getdap -M - || true], [], [stdout], [stderr])
AT_CHECK([diff -b -B $2 stdout || diff -b -B $2 stderr], [], [ignore],[],[])
AT_CLEANUP])

dnl Given a filename, remove the <Value> element of a DAP4 data response as
dnl printed by getdap4 so that we dont have issues with comparing data values
dnl generated by a non-trival mathmatic formula, which may cause slight difference on
dnl different platforms. Borrow this macro from handler_tests_macros.m4 file in bes/modules/common.
m4_define([REMOVE_DAP4_CHECKSUM], [dnl
    sed 's@<Value>[[0-9a-f]]\{8\}</Value>@removed checksum@g' < $1 > $1.sed
    dnl '
    mv $1.sed $1
])

m4_define([_AT_BESCMD_DAP4DATA_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([bescmd])

# Use the following AT_CHECK and REMOVE_DAP4_CHECKSUM lines to generate baseline file.
#AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 | getdap4 -C -D -M - > $2|| true], [], [stdout], [stderr])
#REMOVE_DAP4_CHECKSUM([$2])

AT_CHECK([besstandalone -c $abs_builddir/bes.with_hdfeos2.conf -i $1 | getdap4 -C -D -M - || true], [], [stdout], [stderr])
# Here we add a macro to remove the DAP4 checksum.
REMOVE_DAP4_CHECKSUM([stdout])

AT_CHECK([diff -b -B $2 stdout || diff -b -B $2 stderr], [], [ignore],[],[])
AT_CLEANUP])


m4_define([AT_BESCMD_RESPONSE_TEST],
[_AT_BESCMD_TEST([$abs_srcdir/h4.with_hdfeos2/$1], [$abs_srcdir/h4.with_hdfeos2/$1.baseline])
])

m4_define([AT_BESCMD_BINARYDATA_RESPONSE_TEST],
[_AT_BESCMD_BINARYDATA_TEST([$abs_srcdir/h4.with_hdfeos2/$1], [$abs_srcdir/h4.with_hdfeos2/$1.baseline])
])

m4_define([AT_BESCMD_DAP4DATA_RESPONSE_TEST],
[_AT_BESCMD_DAP4DATA_TEST([$abs_srcdir/h4.with_hdfeos2/$1], [$abs_srcdir/h4.with_hdfeos2/$1.baseline])
])


# The same set of tests that the old default handler uses.
AT_BESCMD_RESPONSE_TEST([S2000415.HDF.0.bescmd])
AT_BESCMD_RESPONSE_TEST([S2000415.HDF.1.bescmd])
AT_BESCMD_RESPONSE_TEST([S2000415.HDF.2.bescmd])
# The baseline file for this test(data) is too big.
# Remove this test from the release 3.11.7. Obtain the baseline file from older versions for testing.
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([S2000415.HDF.3.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds1.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testan1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testan1.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testan1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testdfp1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testdfp1.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfp1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testdfr1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testdfr1.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testdfr2.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testdfr2.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr2.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testdfr3.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testdfr3.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr3.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testgr1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testgr1.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testgr2.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testgr2.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr2.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testgr3.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testgr3.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr3.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testgr4.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testgr4.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr4.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testgr5.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testgr5.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr5.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds2.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds2.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds2.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds3.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds3.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds3.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds4.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds4.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds4.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds5.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds5.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds5.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds6.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds6.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds6.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testsds7.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds7.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds7.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testvs1.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs1.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs1.hdf.ddx.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs1.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testvs2.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs2.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs2.hdf.ddx.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs2.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testvs3.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs3.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs3.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testvs4.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs4.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs4.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([testvs5.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs5.hdf.dds.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs5.hdf.data.bescmd])

#Turn off this test since CF option doesn't support GR interface. 
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr1.hdf.data1.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds1.hdf.data1.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds3.hdf.data1.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs1.hdf.data1.bescmd])

# Throws an error.
# AT_BESCMD_RESPONSE_TEST([GridFile.hdf.das.bescmd])
# AT_BESCMD_RESPONSE_TEST([GridFile.hdf.dds.bescmd])
# AT_BESCMD_BINARYDATA_RESPONSE_TEST([GridFile.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([PointFile.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([PointFile.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([PointFile.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([SwathFile.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([SwathFile.hdf.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([SwathFile.hdf.data.bescmd])

AT_BESCMD_RESPONSE_TEST([special_char_file_attr_sds.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([special_char_file_attr_sds.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([special_char_file_attr_sds.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([special_char_file_attr_sds.hdf.ddx.bescmd])

AT_BESCMD_RESPONSE_TEST([special_char_var_attr_sds.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([special_char_var_attr_sds.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([special_char_var_attr_sds.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([special_char_var_attr_sds.hdf.ddx.bescmd])

## HFRHANDLER-154:_FillValue type mismatch test
AT_BESCMD_RESPONSE_TEST([sds_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([sds_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([sds_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([sds_fv_t_mis.hdf.ddx.bescmd])

# Test HDF-EOS2 files.
AT_BESCMD_RESPONSE_TEST([grid_1_2d.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_xy.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy_no_cf_attr.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_xy_no_cf_attr.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy_no_cf_attr.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_xy_no_cf_attr.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xy.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_xy.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xy.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xy.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xyz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_xyz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xyz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_xyz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_z.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_z.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_z.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_z.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_zz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_zz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_zz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_3d_zz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_size.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d_size.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_size.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_size.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_xy.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d_xy.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_xy.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_xy.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_size.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_3d_size.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_size.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_size.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_xyz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_3d_xyz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_xyz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_3d_xyz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_1d_t.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_1d_t.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_1d_t.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_1d_t.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_dim_mismatch.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xy_dim_mismatch.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_dim_mismatch.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_dim_mismatch.hdf.ddx.bescmd])
#
# These tests fail because the CF option of the current handler doesn't
# handle the case when there is no dimension name for one of swath field dimension.
# That dimension is treated as a missing field. However, this missing field doesn't
# have a name and this causes the failure when dap4 reads the data.
# Since we haven't encountered a real case, we just document here and will handle the
# issue in the future if necessary. KY 2024-08-20 
# AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_no_dim.hdf.das.bescmd])
# AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xy_no_dim.hdf.data.bescmd])
# AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_no_dim.hdf.dds.bescmd])
# AT_BESCMD_RESPONSE_TEST([swath_1_2d_xy_no_dim.hdf.ddx.bescmd])
#
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyzz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyzz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyzz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyzz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_2x2yz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_3d_2x2yz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_2x2yz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_2x2yz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_xyz_2dim.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_3d_xyz_2dim.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_xyz_2dim.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_3d_xyz_2dim.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_4d_2x2yzt.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_4d_2x2yzt.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_4d_2x2yzt.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_4d_2x2yzt.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_2d_xyz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_2d_xyz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_2d_xyz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_2d_xyz.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_3d_2x2yz.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz.hdf.ddx.bescmd])

## HFRHANDLER-154:_FillValue type/size mismatch test
AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis.hdf.ddx.bescmd])

AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis_uchar8.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_fv_t_mis_uchar8.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis_uchar8.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_1_2d_fv_t_mis_uchar8.hdf.ddx.bescmd])

AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis.hdf.ddx.bescmd])

AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis_arr.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis_arr.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis_arr.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis_arr.hdf.ddx.bescmd])

AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_3d_2x2yz_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_2_3d_2x2yz_fv_t_mis.hdf.ddx.bescmd])

# Test Hybrid files.
AT_BESCMD_RESPONSE_TEST([h_grid.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_grid.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([h_grid.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([h_grid.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_swath.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath.hdf.ddx.bescmd])

## HFRHANDLER-154:_FillValue type mismatch test
AT_BESCMD_RESPONSE_TEST([h_grid_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_grid_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([h_grid_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([h_grid_fv_t_mis.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath_fv_t_mis.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_swath_fv_t_mis.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath_fv_t_mis.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath_fv_t_mis.hdf.ddx.bescmd])

##HFRHANDLER-169 etc.: Map HDF4 char array to DAP string
AT_BESCMD_RESPONSE_TEST([sds_char_data_int8_attr.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([sds_char_data_int8_attr.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([sds_char_data_int8_attr.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([sds_char_data_int8_attr.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([vdata_char_array.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([vdata_char_array.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([vdata_char_array.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([vdata_char_array.hdf.ddx.bescmd])

##HFRHANDLER-104:for vgroup/grid/swath attribute test.
AT_BESCMD_RESPONSE_TEST([grid_attr.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_attr.hdf.das.bescmd])
AT_BESCMD_RESPONSE_TEST([vgroup_attr.hdf.das.bescmd])


# HFRHANDLER-19: Data subsetting test.
AT_BESCMD_BINARYDATA_RESPONSE_TEST([PointFile.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([SwathFile.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_fv_t_mis.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_fv_t_mis_uchar8.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_xy.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_2d_xy_no_cf_attr.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_xy.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_xyz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_z.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_1_3d_zz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d_size.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_2d_xy.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_3d_size.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([grid_2_3d_xyz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_grid.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_grid_fv_t_mis.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_swath.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([h_swath_fv_t_mis.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([sds_fv_t_mis.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([special_char_file_attr_sds.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([special_char_var_attr_sds.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_1d_t.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xy_dim_mismatch.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyz_fv_t_mis_arr.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_2d_xyzz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_3d_2x2yz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_3d_xyz_2dim.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_1_4d_2x2yzt.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_2d_xyz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_3d_2x2yz.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_2_3d_2x2yz_fv_t_mis.hdf.s.data.bescmd])

# Swath with multiple dimension maps.
AT_BESCMD_RESPONSE_TEST([swath_3_3d_dimmap.das.bescmd])
AT_BESCMD_RESPONSE_TEST([swath_3_3d_dimmap.dds.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([swath_3_3d_dimmap.data.bescmd])

# General data reading
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testan1.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfp1.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr1.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr2.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testdfr3.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr1.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr2.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr3.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr4.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testgr5.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds1.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds2.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds3.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds4.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds5.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds6.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testsds7.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs1.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs2.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs3.hdf.s.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs4.hdf.s.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([testvs5.hdf.s.data.bescmd])

# HFRHANDLER-19:for robust vdata/vgroup test.
AT_BESCMD_RESPONSE_TEST([tuservds.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tuservds.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tuservds.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tuservds.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tuservgs.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tuservgs.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tuservgs.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tuservgs.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvattr.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvattr.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvattr.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tvattr.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvdatasvgroups_SD.hdf.das.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvdatasvgroups_SD.hdf.data.bescmd])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvdatasvgroups_SD.hdf.s.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvdatasvgroups_SD.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tvdatasvgroups_SD.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvpack.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvpack.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvpack.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tvpack.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsblkinfo.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvsblkinfo.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsblkinfo.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsblkinfo.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsempty.hdf.das.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvsempty.hdf.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsempty.hdf.dds.bescmd])
AT_BESCMD_RESPONSE_TEST([tvsempty.hdf.ddx.bescmd])
AT_BESCMD_RESPONSE_TEST([tvset.hdf.das.bescmd])

#data reading for tvset.hdf is not right. So comment them out now.
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvset.hdf.data.bescmd])
#AT_BESCMD_BINARYDATA_RESPONSE_TEST([tvset.hdf.s.data.bescmd])
AT_BESCMD_RESPONSE_TEST([tvset.hdf.dds.bescmd])
#tvet ddx output is too large.
#Since DDS+DAS can replace ddx, so remove this test and ddx.
## To obtain the original ddx, go to version 3.11.6 or earlier.
#
#AT_BESCMD_RESPONSE_TEST([tvset.hdf.ddx.bescmd])

#Test the direct HDF4 to DMR

# vgroup, vdata, sds, HDF-EOS2 grid, swath and point general tests.
AT_BESCMD_RESPONSE_TEST([vgroup_attr.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([vg_hl_test.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([testsds1.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([General_Vgroups.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([vdata_test.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([vs_attr.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs2.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([testvs3.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([vdata_packed_linked_blocks.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([GridFile.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([h_swath.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([PointFile.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([f97182070958.hdf.dmr.bescmd])

#Various chunking/compression cases for the mapping from HDF4 to DMR 
AT_BESCMD_RESPONSE_TEST([SDS_simple_chunk.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_simple_chunk_comp.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_chunk_extra_area.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_chunk_extra_area_comp.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_simple_comp.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_unlimited.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_simple_unlimited_0.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_fillchunk_comp.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_fillchunk_alltypes.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([SDS_empty.hdf.dmr.bescmd])

#HDF-EOS2 several grid tests.
AT_BESCMD_RESPONSE_TEST([cea.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([sinusoid.hdf.dmr.bescmd])
AT_BESCMD_RESPONSE_TEST([grid_2_2d_ps.hdf.dmr.bescmd])

#Test the direct HDF4 to DMR data access
AT_BESCMD_DAP4DATA_RESPONSE_TEST([vdata_test.hdf.dap.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([vdata_packed_linked_blocks.hdf.dap.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([vdata_test.hdf.dap.constraint.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([vdata_packed_linked_blocks.hdf.dap.constraint.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([SDS_simple_comp.hdf.dap.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([SDS_simple_comp.hdf.dap.constraint.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([sinusoid.hdf.dap.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([sinusoid.hdf.dap.constraint.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([cea.hdf.dap.bescmd])
AT_BESCMD_DAP4DATA_RESPONSE_TEST([cea.hdf.dap.constraint.bescmd])

#CF DMR Test
AT_BESCMD_BESCONF_RESPONSE_TEST([h4.with_hdfeos2/grid_1_2d.hdf.dmr.bescmd],[bes.with_hdfeos2_cfdmr.conf])


# Test options to asciival
#
# The general options that asciival currently processes are:
# d: instead of getting data, print the dds.
# f: Force all numberic types to float64, enforce name canonicalization,
#    munge DDDMMSSH to a float number (with sign as hemisphere indicator).
# g: Use the gui
# v: Verbose output
# a: Asynchronous transfer (broken in the core).
#
# Note that the options -r (the per-url option) are tested by the
# multiurl tests.

# Test single and multi URL access and variable renaming

# $Id$

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

source "testsuite/asciival.1/urls.tcl"

set test_name "data: "

# The `1' in compare_stdout means call xfail if the test fails.

# Test with a local url
asciival_start "-v" "${stdin_test_data}"
compare_stdout "testsuite/data/asciival/data.1.localurl" "$test_name: local url"

# Test with input from stdin
catch "exec cat ${stdin_test_data} | ./asciival -v -- -" comp_output
compare_stdout "testsuite/data/asciival/data.1.stdin" "$test_name: stdin"

asciival_start " " "${hdf_winds}?${hdf_winds_ce}"
compare_stdout "testsuite/data/asciival/data.1.data6" "$test_name: hdf winds (structure data)"

asciival_start " " "${jg_test}?"
compare_stdout "testsuite/data/asciival/data.1.data5" "$test_name: jg test (sequence data)"

asciival_start " " "${fnoc1}?${fnoc1_ce} -r u:u1"
compare_stdout "testsuite/data/asciival/data.1.data" "$test_name: fnoc1"

asciival_start " " "${fnoc1}?${fnoc1_ce} -r u:u1 ${fnoc2}?${fnoc2_ce} -r u:u2"
compare_stdout "testsuite/data/asciival/data.1.data2" "$test_name: fnoc1 & fnoc2"

# get two variables
asciival_start " " "${fnoc3}?${fnoc3_ce} -r u:u3 -r v:v3"
compare_stdout "testsuite/data/asciival/data.1.data3" "$test_name: fnoc3 (two variables)"


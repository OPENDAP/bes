#!/bin/bash


BES_DEBUG_BASE="cerr,timing,bes,xml,dap"

#BES_CMD="TRMM_3B42/TRMM_3B42_daily_Aggregation_1998.ncml.dods-bescmd.xml"
#BES_CMD="TRMM_3A11/TRMM_3A11_Aggregation.ncml.dods-bescmd.xml"
#BES_CMD="GPM_3IMERGHH/GPM_3IMERGHH.03_Aggregation_20140505.ncml.dods-bescmd.xml"
#BES_CMD="AIRX3STD/AIRX3STD.006_Aggregation_2002.ncml.dods-bescmd.xml"
BES_CMD="small_aggregations/AIRX3_hdf4_aggregation_small.dods-bescmd.xml"



BES="/Users/ndp/hyrax/github/bes/standalone/.libs/besstandalone"
BES_CONF="/Users/ndp/hyrax/github/local/etc/bes/bes.conf.local"


# Baseline (no debug controlled optimizations enabled)
output_base=$BES_CMD
BES_DEBUG=$BES_DEBUG_BASE
valgrind --track-fds=yes --log-file=$output_base.valgrind --max-stackframe=2600000 --leak-check=full --dsymutil=yes --show-leak-kinds=all $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG > $output_base.valgrind.result 2>$output_base.valgrind.log
iprofiler -T 600s -o $output_base -timeprofiler -allocations $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG > $output_base.result 2>$output_base.log



# This exercises the clear_local_data switch. This causes 
# the ArrayAggregationBaSe class to call libdap::Array::clear_local_data() 
# at the end of it's serialize() method. (At lease that's
# what it does right now as I write this - to be sure
# have a look at the current source)
output_base=$BES_CMD"_clear_local_data"
BES_DEBUG=$BES_DEBUG_BASE",clear_local_data"

valgrind --track-fds=yes --log-file=$output_base.valgrind --max-stackframe=2600000 --leak-check=full $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG,clear_local_data > $output_base.valgrind.result 2>$output_base.valgrind.log
iprofiler -T 600s -o $output_base -timeprofiler -allocations $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG,clear_local_data > $output_base.result 2>$output_base.log



#!/bin/bash


BES_DEBUG_BASE="cerr,timing,bes,xml,dap"

#BES_CMD="TRMM_3B42/TRMM_3B42_daily_Aggregation_1998.ncml.dods-bescmd.xml"
#BES_CMD="TRMM_3A11/TRMM_3A11_Aggregation.ncml.dods-bescmd.xml"
BES_CMD="GPM_3IMERGHH/GPM_3IMERGHH.03_Aggregation_20140505.ncml.dods-bescmd.xml"
#BES_CMD="AIRX3STD/AIRX3STD.006_Aggregation_2002.ncml.dods-bescmd.xml"
#BES_CMD="small_aggregations/AIRX3_hdf4_aggregation_small.dods-bescmd.xml"



BES="/Users/ndp/hyrax/github/bes/standalone/.libs/besstandalone"
BES_CONF="/Users/ndp/hyrax/github/local/etc/bes/bes.conf.local"



#
# Use valgrind to search for memory leaks
#
valgrind_memcheck()
{
    valgrind --tool=Memcheck --leak-check=full  --track-fds=yes --log-file=$output_base.memcheck.log --max-stackframe=2600000 --dsymutil=yes --show-leak-kinds=all $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG > $output_base.memcheck.stdout 2>$output_base.memcheck.stderr
}

#
# Use valgrind to profile heap usage
#
valgrind_massif()
{
    valgrind --tool=Massif --time-unit=ms --heap=yes --max-snapshots=1000 --massif-out-file=$output_base.massif --track-fds=yes --log-file=$output_base.massif.log --max-stackframe=2600000  --dsymutil=yes  $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG > $output_base.massif.stdout 2>$output_base.massif.stderr

}


#
# Use the OS-X iprofiler app to get allocation and time profiles
#
iprofiler_osx()
{
    iprofiler -T 600s -o $output_base -timeprofiler -allocations $BES -c $BES_CONF -i $BES_CMD -d $BES_DEBUG > $output_base.dtps.stdout 2>$output_base.dtps.stderr
}


doAll() 
{
    valgrind_massif
    valgrind_memcheck
    
    os=`uname -a | awk '{print $1}' -`
    if [ "$os" = "Darwin" ]; then
        iprofiler_osx
    fi
}



# Baseline (no debug controlled optimizations enabled)
output_base=$BES_CMD
BES_DEBUG=$BES_DEBUG_BASE

doAll 




# This exercises the clear_local_data switch. This causes 
# the ArrayAggregationBaSe class to call libdap::Array::clear_local_data() 
# at the end of it's serialize() method. (At lease that's
# what it does right now as I write this - to be sure
# have a look at the current source)
output_base=$BES_CMD"_clear_local_data"
BES_DEBUG=$BES_DEBUG_BASE",clear_local_data"

doAll


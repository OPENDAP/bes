
Installing the HDF4 handler for the OPeNDAP server.

Updated for 3.9.4

---------------------------------------------------------------------------

BUILDING THE SOFTWARE
REQUIREMENTS
NOTES

---------------------------------------------------------------------------

BUILDING THE SOFTWARE

0) Please skim REQUIREMENTS and NOTES sections of this file and README file before reporting
   problems. Thanks.

*) IMPORTANT NOTE: The versions of hdf4 that are installed by package
    managers such as Yum and rpm often are not capable of being linked with a
    shared library/module, whcih is how the hdf4 handler must be built. To
    correct this, you may need to build the HDF4 library from soruce and
    specify the '--with-pic' option to configure. This may be a problem only
    on non-i386 linux machines; reports vary. To build the handler on OS/X
    and an AMD 64-bit machine running Fedora Core 10 Linux (very similar to
    Red Hat or CentOS) it was necessary to build hdf4. To d so I ran
    configure as './configure --with-pic --disable-fortran --disable-netcdf'

1) In this version of the release, the handler is enhanced to support
   the access of many NASA HDF-EOS2 products and some NASA pure HDF4
   products by many CF-compliant visualization NASA pure HDF4 products
   by many CF-compliant CF-compliant visualization clients such as IDV
   and Panoply. To take advanage of this feature, the hansdler's
   configuration options are different, please read carefully about
   the following the note.

*) Build from the source, one MUST use HDF-EOS2 library and configure with
   the following option:
   ./configure --with-hdf4=<Your HDF4 library path> 
   	       --with-hdfeos2=<Your HDF-EOS2 library path> 
	       --prefix=<Your installation path>

   Without specifying the option "--with-hdfeos2" will result in
   configuring the default HDF4 OPeNDAP handler. The HDF4 handler with
   the default options can NOT make the NASA HDF-EOS2 products and
   some NASA pure HDF4 products work with CF-compliant visualization
   clients

   Some variable paths are pretty long (>15 characters). COARDS
   conventions require the number of characters in a field doesn't
   exceed 15 characters. So the above configuration option may cause
   some OPeNDAP clients that are still following COARDS conventions.
   To compensate for that, we provide a configuration option to
   shorten the name so that it doesn't exceed 15 characters. To
   address the potential name clashing issue, both options may make
   some variable names change so that unique variable names are
   present in the OPeNDAP output. To best preserve the original
   variable names, we recommend not using --enable-short-name option
   unless it is absolutely necessary. To configure the handler with
   the short name option, do the following:

  ./configure --with-hdf4=<Your HDF4 library path> 
	      --with-hdfeos2=<Your HDF-EOS2 library path> 
	      --prefix=<Your installation path> --enable-short-name

  Please add '--with-pic' option for 64-bit build.

  To find the information on how to build the HDF-EOS2 library, please
  check http://hdfeos.org/software/hdfeos.php#ref_sec:hdf-eos2 *)
  Install from RPMs

   
*) To build the handler with the default option, 
   Type `./configure' at the system prompt. On some systems you may have to
   type `sh configure.' If you want this part of the server to install
   someplace other than /usr/local/bin, use --prefix to change the prefix
   from the default "/use/local/."

2) Type `make' to build the server module.

3) Install the server module in $prefix by running `make install'. This
   will also add the new h4.conf file to the $prefix/etc/bes/modules directoy.
   The BES configuration file bes.conf will automatically load any module
   configuration files in that directory. The h4.conf file contains hdf4_handler
   specific configurations for use with the BES Framework. This includes
   some parameters that used to be in the bes.conf file, such as the TypeMatch
   parameter for finding your files.

4) For some installations, you must arrange for your operating system to find
   the shared libraries installed by default in $prefix/lib. Do this by
   either setting an environment variable such as LD_LIBRARY_PATH or by
   editing /etc/ld.so.conf. Different operating systems handle this in
   different ways.

5) If you want to build your own RPM using '--with-hdfeos2' option, please refer
   to hdf4_handler.cf.spec file.

Building from Our SVN Repository

  If you are building from a SVN checkout, run 'autoreconf --verbose'
  before './configure; make'. If you try to run autoconf, et c., by
  hand and wind up with build files that don't work, use 'autoreconf
  --force --install --verbose'. Once autoreconf has made the configure
  and Makefile.in files, do ./configure; make; make install as
  outlined above.

REQUIREMENTS

  o You need the libdap library version 3.11.2 to build and install this
    software. If you're using Linux, this means either building form source
    or using the libdap and libdap-devel RPM packages.

  o If you're planning on using this with the OPeNDAP 4 Data Server (Hyrax),
    you'll need version 3.9.2 of the BES software. Make sure to build that 
    first.

  o You also need a recent copy of HDF4. We've tested this server with
    version 4.2r6, although any recent version should work fine. 
    In order to link with 4.2r6 on Linux (and maybe other platforms) I had to
    compile HDF4 using --without-fortran --with-pic and I also used 
    --without-netcdf (because some sites need their HDF4 libraries built that
    way and I wanted to be sure the handler would build with that 
    configuration). If the configure script cannot find your copy of hdf4, use
    the --with-hdf4 options to tell it where to look (see configure --help).

NOTES

  o This handler uses a configuration parameter, set in the bes.conf file, to
    control where copies of some metadata objects built by the server are 
    cached. By default this cache is in /tmp - you are encouraged to change
    that. Set the location using the 'HDF4.CacheDir' parameter. For example,
    if you have set the BES.CacheDir parameter to /var/run/bes/cache you might
    set HDF4.CacheDir to /var/run/bes/hdf4_cache. 

  o DEBUGGING AIDS

    - The OPeNDAP libdap library includes the following debugging aids that
      may be of help to you in developing new applications.

    - DBG: simple program instrumentation -- see the file debug.h distributed
      with libdap (which is installed in the libdap header directory; use
      'config-libdap --cflags' and look at the value if -I).

    - DBG2: more elaborate program instrumentation -- by convention this is
      used for output that is half a page or more, while DEBUG is used for
      single line output.

    - To build with program instrumentation use `--enable-debug=<level>'
      where <level> is 1 or 2.

    - By default, both debug and dbnew are *not* enabled. Thus, if you want
      to build a straight version of the libraries and test code, use
      `./configure'. If you want the extra features, use:

      ./configure --enable-dbnew --enable-debug=2

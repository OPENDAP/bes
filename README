
Updated for version 1.4.3

This file describes the HDF5 DAP server developed by The HDF Group and OPeNDAP 
under a grant from NASA.

For information about building the OPeNDAP HDF5 Data Handler, see the
INSTALL. This handler can support existing visualization clients like Ferret
and GrADS using NASA EOS Grid data.

Note that the libdap constraint evaluator now works with Arrays of
Structures. This was a known issue with this handler.

* Installing the handler in Hyrax

Note: The RPM Packages are built using the --enable-cf and
--enable-short-path options. If you don't want those options, you'll need to
build from the sources.

This data handler includes an executable for use with Server3 and a
shared object module for use with Hyrax.

A configuration edition helper script, `bes-hdf5-data.sh' is provided
in this package for easy configuration of the Hyrax BES server,
designed to edit bes.conf. The script is called using:

   bes-hdf5-data.sh [<bes.conf file to modify> [<bes modules dir>]]
   
The `bes-conf' make target runs the script while trying to select paths
cleverly, and should be called using:

   make bes-conf

Test data are also installed, so after installing this handler, Hyrax
will have data to serve providing an easy way to test your new
installation and to see how a working bes.conf should look. To use
this, make sure that you first install the bes, and that dap-server
gets installed too.  Finally, every time you install or reinstall
handlers, make sure to restart the BES and OLFS.

* Background on the handler

This data handler is one component of the OPeNDAP DAP Server; the
server base software is designed to allow any number of handlers to be
configured easily.  See the DAP Server README and INSTALL files for
information about configuration, including how to use this handler.

HDF Version: 

	This release of the server supports HDF5 1.6.6 or above.

Support for HDF5 data types:

	Groups: Group structure is mapped into a special attribute
	HDF5_ROOT_GROUP {...}. This will be turned off if --enable-cf
        configuration option is on.

	Datasets: Array, Byte, Float32/64, (U)Int16/32, String are
	supported.  If an array has dimensional data, Grid will be generated
	automatically.

	Comments: Comments are mapped into DAS attributes.

	Attributes: Attributes on groups and dataset are supported

	Compounds: Compound data types are mapped into Structure in DAP.

	Soft/Hard Links: Links are mapped to DAS attributes.

	References: Object or regional references are mapped into URLs.
	This feature is only available for HDF5 1.8 beta.

Special Support for NASA EOS data: 

	Grids: Based on the projection specified in a metadata file, some
	arrays are automatically mapped into "Grid" instead of "Array". You
	can turn off this behavior through a configuration option(e.g.
	--enable-eos-grid=no).  If "Grid" is chosen, Grid map data are
	automatically and artificially generated based on the
	"UpperLeftPointMtrs" and "LowerRightPointMtrs" values in 
        the StructMetadata. Please see set_dimension_array() in H5EOS.cc 
        for details.

        Swath: If --eanble-cf configuration option is on and 
        the SWATH_STRUCTURE string is found in the StructMetadata file,
        the handler looks for Latitude and Longitude array datasets
        and rename them as lat and lon. It also adds a special attribute
        called "coordinates lat lon". This enables IDV to visualize
        some OMI Swath data.

	Metadata: Metadata (e.g. StructMetadata.x or CoreMetada.x) are
	parsed and its attributes are generated in a nested structure
	format. If you don't want to parse them, use the configuration option
        '--enable-eos-meta=no'.

Special Support for files that have HDF5 dimension scale:

        The HDF5 handler generates Grid if a dataset has dimension scale.
        Only one scale should attach to one dimension. We don't support 
        multiple scales applying to one dimension.

        Please refer to http://www.hdfgroup.org/HDF5/doc/HL/H5DS_Spec.pdf
        for HDF5 dimension scale specification.


Implementation details:

	1. HDF5 Data(including data and metadata structure) retrieval
	is implemented at H5Git.cc.

	2. The current dap_h5_handler uses depth-first search to walk
	through HDF5 graph. If a loop is detected in a graph, it stops
	searching further which makes it a graph into a tree.  The
	handler retrieves HDF5 attributes and puts them into DODS DAS
	table. DAS table will hold tree structure under HDF5_ROOT_GROUP
	attribute.

        By using absolute name of HDF5 objects, we also have a good
	view of the structure of the whole HDF5 file. This absolute
	name can be suppressed with --enable-short-path configuration
	option.

Limitations:

	o No support for HDF5 files that have a '.' in a group/dataset
	  name.

	o No support for any variable length array types except for 1
	  dimensional variable-length string array.

	o No support for ENUM type.

	o No support for BITFIELD and OPAQUE types.

	o 64 bit integer (array) is not supported.

	o Both signed and unsigned character maps to Byte in OPeNDAP. 

Muqun Yang (ymuqun@hdfgroup.org)

Hyo-Kyung Lee (hyoklee@hdfgroup.org)

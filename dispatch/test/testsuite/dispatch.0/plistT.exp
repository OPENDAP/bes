# expect/tcl code to test plistT
# pcw
#

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir
global dispatchTEST

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "
*****************************************
Entered plistT::run

*****************************************
Create the BESContainerPersistentList

*****************************************
Add BESContainerStorageFile for File1 and File2
successfully added File1
successfully added File2

*****************************************
Try to add File2 again
unable to add File2, good

*****************************************
looking for sym1
found sym1

*****************************************
looking for sym2
found sym2

*****************************************
looking for sym3
found sym3

*****************************************
looking for sym4
found sym4

*****************************************
looking for sym5
found sym5

*****************************************
looking for sym6
found sym6

*****************************************
looking for sym7
found sym7

*****************************************
looking for sym8
found sym8

*****************************************
looking for sym9
found sym9

*****************************************
looking for sym10
found sym10

*****************************************
looking for non-existant thingy
didn't find thingy, good

*****************************************
show containers
store
    name: File1
    container
        symbolicName: sym1
        realName: real1
        dataType: type1
    container
        symbolicName: sym2
        realName: real2
        dataType: type2
    container
        symbolicName: sym3
        realName: real3
        dataType: type3
    container
        symbolicName: sym4
        realName: real4
        dataType: type4
    container
        symbolicName: sym5
        realName: real5
        dataType: type5
store
    name: File2
    container
        symbolicName: sym10
        realName: real10
        dataType: type10
    container
        symbolicName: sym6
        realName: real6
        dataType: type6
    container
        symbolicName: sym7
        realName: real7
        dataType: type7
    container
        symbolicName: sym8
        realName: real8
        dataType: type8
    container
        symbolicName: sym9
        realName: real9
        dataType: type9

*****************************************
remove File1
successfully removed File1

*****************************************
looking for sym2
couldn't find sym2, good

*****************************************
looking for sym7
found sym7

*****************************************
Returning from plistT::run"

set dispatchTEST ./plistT

dispatch_start

if ![string compare $test_out $comp_output] { # check comp_output
    pass "plistT"
} else {
    fail "plistT"
}


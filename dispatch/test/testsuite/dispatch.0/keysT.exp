# expect/tcl code to test keysT
# pcw
#

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir
global dispatchTEST

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "
*****************************************
Entered keysT::run

*****************************************
no file set
unable to create BESKeys, good, because:

*****************************************
notfound file set
unable to create BESKeys, good, because:

*****************************************
bad keys, not enough equal signs
unable to create BESKeys, good, because:
BES: invalid entry BES.BADKEY; there are 0 = characters.


*****************************************
bad keys, too many equal signs
unable to create BESKeys, good, because:
BES: invalid entry BES.BADKEY=str1=str2; there are 2 = characters.


*****************************************
good keys file, should load
created, good

*****************************************
get keys
looking for BES.KEY1
BES.KEY1 = val1
looking for BES.KEY2
BES.KEY2 = val2
looking for BES.KEY3
BES.KEY3 = val3

*****************************************
look for non existant key
did not find BES.NOTFOUND

*****************************************
look for key with empty value
found and is empty

*****************************************
set bad key, 0 = characters
unable to set the key, good, because:
BES: invalid entry BES.NOEQS; there are 0 = characters.

*****************************************
set bad key, 2 = characters
unable to set the key, good, because:
BES: invalid entry BES.2EQS=val1=val2; there are 2 = characters.

*****************************************
set BES.KEY5 to val5
set_key successful

*****************************************
set BES.KEY6 to val6
set_key successful

*****************************************
get keys
looking for BES.KEY1
BES.KEY1 = val1
looking for BES.KEY2
BES.KEY2 = val2
looking for BES.KEY3
BES.KEY3 = val3
looking for BES.KEY4
BES.KEY4 = 
looking for BES.KEY5
BES.KEY5 = val5
looking for BES.KEY6
BES.KEY6 = val6

*****************************************
Returning from keysT::run"

set dispatchTEST ./keysT

dispatch_start

if ![string compare $test_out $comp_output] { # check comp_output
    pass "keysT"
} else {
    fail "keysT"
}


#
# The bes build
#
# Initial Travic-CI control file. 6.5.15 jhrg
# Hacked quite a bit; added support for parallel autotest tests
# and removed unused parts. jhrg 8.23.17
#
# Now uses hyrax-dependencies and libdap binaries stored in an AWS S3 bucket
# that were built using other builds. jhrg 2.24.18
#
# Try using Ubuntu Focal

# virt: lxd             # use an lxd container
# arch: amd64           # optional, this is default, routes to a full VM
# os: linux             # optional, this is default
dist: xenial          # or bionic | xenial | trusty | precise with xenial as default

language: cpp

compiler: gcc

branches:
  only:
  - master

addons:
  sonarcloud: true
  apt:
    packages:
    - uuid-dev
    - libxml2-dev
    - libcurl4-openssl-dev
    - libcppunit-dev
    - libicu-dev
    - gcovr

git:
  depth: false

env:
  global:
    # NB: This value of $prefix must be shared between the hyrax-deps, libdap and bes builds.
    - prefix=$HOME/install
    - PATH=$prefix/bin:$prefix/deps/bin:$PATH
    - TESTSUITEFLAGS=-j7
    # Change this when libdap version numbers change
    - LIBDAP_RPM_VERSION=3.20.7-16
    # SONAR_LOGIN, made using "travis encrypt --org -r OPENDAP/bes SONAR_LOGIN=335df..."
    - secure: "TmoFcgeIyAEjFyrlqB6rhdUhDqPJfxVZmT5fewgVHj0xm767VZ6DU21mM6ZHgNGyk99TzX0Gx/dwSqbsUj18hSSAvEa7fJQSKJ5IBJvTeMKhXn1DPPG9VpuZ4ti5afRDiNr6EJKbVxwBTkz+3798S8LajPuXGupYupir8IJQCt8="
    # SONAR_MODULES_LOGIN, using "travis encrypt --org -r OPENDAP/bes SONAR_MODULES_LOGIN=42ba..."
    - secure: "V3fMZgzMRRB0xFQMTvXf2fFPHIdwvg2y6bNFKqSGI5HP2sZEtc7XqSC4hjboR9RjnyZY/H1L/EuYQCS45gmJMsmtzo4g1Cn0oTfuPRJzDSi00jRlB1wUl5p1pU0Fdv2ffrGF4m6/SRfYFT0KkR/Tp8hdIoYx5/8R4MajysABMT4="
    # SONAR_SUBMODULES_LOGIN, using "travis encrypt --org -r OPENDAP/bes SONAR_SUBMODULES_LOGIN=Q4aWrvS..."
    - secure: "Q4aWrvSlKUY7413FNI6tHlWJdhVtjJxrtSBApJRe5fGTn/HEmod5n3O4o0elFhuYh0O57aYsYclD7t0lriKMPvPdY/s8CFAaIPSANhNRkD44MWYWCPyivl83BBUlhWgkqgWFcCEaTqCpF/8A0HlOF1TsE1KKyQSns7snqgWTfSA="    # AWS_ACCESS_KEY_ID
    # user == travis-bes
    - secure: "ZfL1IPX5zab1HWkJTlNPHroyUOp2lhAlcCH6UXDEL/yXpKoRCNkSo/CILM20DsjBckGys/7chom6uIoOilLu9Tp/6nPwkYlOe5DjgDt/qqKutclk9QBfrwU7WHRUOiEOESZl3Knd6B+GzuBZe8nrJzJhZWT54VFiOlEAGeIiFwo="
    # AWS_SECRET_ACCESS_KEY
    # user == travis-bes
    - secure: "UpZB8cf3sOq11Yet8Cktnw4LiWZf24NJ0ugh8drVhShctLhZDiXKb/kMY3VA+pg7Q08ktmKsVYm1WM/+IpQJfOv/gYcGPwSlGuUUW87awtn7WdNPOZBIpG6dZ8dwcWh5XXKHVDyuRpxqc4vmjrIuB5ZUqdT5yVItnp3UhtJjaig="
    # GIT_UID travis-ci-opendap
    - secure: "eUL/RY4kJD9sb3q98Xbfbcdhs6eyFWkfWNb0tvRzksBi/+tYiuojsek0qoBFZnRnO0wwyDAaDrZgu2yoLQTBxGSTqCsYaoDiFtw2m8aW3r+FdjpfmyVR52U9vMoZtpiPGYYM9utlyQ6YRNhzq+XzDJ4juygoIlzbp7qXTALqIL8="
    # GIT_PSWD for travis-ci-opendap
    - secure: "jdEmVdM35qoAmIXTqTCL11IbjEMh6I+jrov/nqQ4wdoJf79O7H7tuuDVkIJ+5RSIjUXsIYgfQAG8Cn+DIJRMnv7mj7TrWGS9LT22bBGErzCcCkrHGKMDH4okbd8cCNQcnb/9woYSYZ38U8QCBsYH1Ma2r4bFU4jAY2KiMOyaY6w="    
    # WOO_UID for travis
    # - secure: "YKSsiV7fjngZ+Xha9oyHUT2Xirz8Iy7bghAzlGk2TyXZwWGbZyFDMeTfE0ZGaAEykhNF9fsqsD6XMzFlwBcYIB5ocP6LfnQ1qMualHVTVbVldo/T2e8uv/9jVIAnfwwT2IbgWpVUXZ1I24kIqHCxnZWYZpbfclSEDnQnkYG9tMg="
    # travis encrypt --org -r OPENDAP/bes WOO_PSWD=... Use with sshpass -p $WOO_PSWD scp ...
    # - secure: "Bw3Jad8QbpJl+o3BnfTlHddaTaerIG/sgnOJsMzVeSJQoMnh9tccTZ7QaNKo1Vs8riNzTHLMZkJja3UgXV9f90HU9xujZhEcnEdR/t1RRiLUsxHZtl20IcL6AQni+LCW0y/K5V0fCqx0cE90aGzBUeP1to/q7fkoRudxHqpXTtc="
    - CMAC_ID="${AWS_ACCESS_KEY_ID}"
    - CMAC_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
    - CMAC_URL="https://s3.amazonaws.com/cloudydap/"
    - CMAC_REGION="us-east-1"
    - CMAC_BUCKET="cloudydap"

before_install:
  - pip install --user awscli

# hyrax-dependencies-build.tar.gz includes/makes the build directory
install:
  - aws s3 cp s3://opendap.travis.build/hyrax-dependencies-build.tar.gz $TRAVIS_BUILD_DIR
  - tar -C $HOME -xzvf $TRAVIS_BUILD_DIR/hyrax-dependencies-build.tar.gz
  - aws s3 cp s3://opendap.travis.build/libdap-build.tar.gz $TRAVIS_BUILD_DIR
  - tar -C $HOME -xzvf $TRAVIS_BUILD_DIR/libdap-build.tar.gz

before_script:
  # This is now done in each step. Doing that made the libdap4 build a bit faster/cleaner
  # and hopefully that will be true here too. jhrg 3/24/21
  # - autoreconf --force --install --verbose
  - source travis/travis_bes_build_offset.sh
  - export BES_BUILD_NUMBER=$(expr $TRAVIS_BUILD_NUMBER - $BES_TRAVIS_BUILD_OFFSET)
  - echo "BES_BUILD_NUMBER is ${BES_BUILD_NUMBER} = ${TRAVIS_BUILD_NUMBER} - ${BES_TRAVIS_BUILD_OFFSET}"
  - export LIBDAP_RPM_VERSION=$(grep "libdap4-" libdap4-snapshot | awk '{print $1;}' - | sed "s/libdap4-//g")
  - echo "Travis default env:"
  - printenv


# Build all the stages for 'master'. For a PR, run the 'build' and 'package' stages,
# but do not run the scan.
stages:
  - name: build
    if: branch = master
  - name: scan
    if:  branch = master
  - name: package
    if: branch = master
  - name: hyrax-olfs-trigger
    if: branch = master AND type != pull_request

jobs:
  include:
  - stage: scan
    name: "scan bes"
    script:
    - export BES_BUILD=sonar-bes-framework
    - autoreconf --force --install --verbose
    - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer --enable-coverage
    - build-wrapper-linux-x86-64 --out-dir bw-output make -j7

    - make check -j7
    - make coverage

    - sonar-scanner -Dproject.settings=sonar-bes-framework.properties -Dsonar.login=$SONAR_LOGIN
    - curl -s https://sonarcloud.io/api/project_badges/quality_gate?project=opendap-bes | grep "QUALITY GATE PASS"

  - stage: scan
    name: "scan bes-modules"
    script:
      - export BES_BUILD=sonar-bes-modules
      - autoreconf --force --install --verbose
      - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer  --enable-coverage
      - build-wrapper-linux-x86-64 --out-dir bw-output make -j7

      - make check -j7
      - make coverage

      - sonar-scanner -Dproject.settings=sonar-bes-modules.properties -Dsonar.login=$SONAR_MODULES_LOGIN
      - curl -s https://sonarcloud.io/api/project_badges/quality_gate?project=opendap-bes-modules | grep "QUALITY GATE PASS"

  - stage: scan
    name: "scan bes-submodules"
    script:
      - export BES_BUILD=sonar-bes-submodules
      - autoreconf --force --install --verbose
      - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer  --enable-coverage
      - build-wrapper-linux-x86-64 --out-dir bw-output make -j7

      - make check -j7
      - make coverage

      - sonar-scanner -Dproject.settings=sonar-bes-submodules.properties -Dsonar.login=$SONAR_SUBMODULES_LOGIN
      - curl -s https://sonarcloud.io/api/project_badges/quality_gate?project=opendap-bes-submodules | grep "QUALITY GATE PASS"

  - stage: build
    name: "check"
    script: 
    - export BES_BUILD=main
    - autoreconf --force --install --verbose
    - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer
    - make -j7 && make install && besctl start && make check -j7 && besctl stop

  - stage: build
    name: "distcheck"
    script:
    - export BES_BUILD=distcheck
    - autoreconf --force --install --verbose
    - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer
    - make distcheck -j7

    # NB: ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH} supplies the name of the PR branch for a PR,
    # or the name of the branch for a regular push. The reason for this is not that we want special
    # packages for branches, but we want to be able to test builds without making pushes to master
    # and that means having the build-rpm.sh use the spec files on a branch.

  - stage: package
    name: "CentOS-7 RPMs"
    script: 
    - export BES_BUILD=centos7
    - mkdir -p $prefix/rpmbuild
    - echo "branch name ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}"
    - docker run --volume $prefix/rpmbuild:/root/rpmbuild --volume $TRAVIS_BUILD_DIR:/root/travis
                 --env OS=centos7
                 --env DIST=el7
                 --env LIBDAP_RPM_VERSION=$LIBDAP_RPM_VERSION
                 --env BES_BUILD_NUMBER=$BES_BUILD_NUMBER
                 --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                 --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                 opendap/centos7_hyrax_builder:1.7 /root/travis/build-rpm.sh

  - stage: package
    name: "dist"
    script:
      - export BES_BUILD=srcdist
      - autoreconf --force --install --verbose
      - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --with-build=$BES_BUILD_NUMBER
      - make dist -j7
      # Make both a bes-<version>-<build num> and bes-snapshot tar.gz. This will simplify
      # other operations that use the bes source code. Note that the VERSION file holds a
      # string that is the version number as set by the configure script and the build
      # number passed into configure when it is run. jhrg 3/23/21
      - SOURCE_VERSION=$(cat bes_VERSION)
      - mv bes-*.tar.gz bes-$SOURCE_VERSION.tar.gz
      - cp bes-$SOURCE_VERSION.tar.gz bes-snapshot.tar.gz

  - stage: hyrax-olfs-trigger
    name: "Hyrax OLFS Trigger"
    script:
      - export STAGE=hyrax-olfs
      - echo $STAGE
      - autoreconf --force --install --verbose
      - ./configure --disable-dependency-tracking --prefix=$prefix --with-dependencies=$prefix/deps --with-build=$BES_BUILD_NUMBER
      - ./travis/trigger-olfs-build.sh

after_script:
  - ./travis/upload-test-results.sh

before_deploy:
  - export DEPLOY="S3"
  # Make sure that we have the target dir...
  - mkdir -p $TRAVIS_BUILD_DIR/package;
  # Source distribution prep (copies both the 'version' and 'snapshot'
  - if test "$BES_BUILD" = "srcdist"; then cp bes-*.tar.gz $TRAVIS_BUILD_DIR/package; fi
  # CentOS-7  distribution prep
  - if test "$BES_BUILD" = "centos7"; then ./travis/rpm-to-package-dir.sh "el7"; fi
  # Check for the stuff...
  - ls -l $TRAVIS_BUILD_DIR/package

# The deploy section copies the snapshot build product our S3 bucket and to www.opendap.org
deploy:
  # Push all build results to our S3 bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: opendap.travis.build
    skip_cleanup: true
    local_dir: $TRAVIS_BUILD_DIR/package
    on:
      branch: master
      condition: $BES_BUILD =~ ^centos7|srcdist$

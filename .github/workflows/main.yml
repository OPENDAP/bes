# Copied from the libdap4 main.yml workflow written by Emmanuel Babalola.
# jhrg 2/24/21

name: Main build workflow

env:
  prefix: ${{ github.workspace }}/build
  jobs: 16

on:
  push:
    branches: [ master gdal314 actions-build ]
  pull_request:
    branches: [ master gdal314 actions-build ]
  workflow_dispatch:

jobs:
  ubuntu-build:
    runs-on: ubuntu-16.04
    
    steps:
      - name: Packages
        run: sudo apt-get --yes install libxml2-dev uuid-dev libcurl4-openssl-dev libcppunit-dev libicu-dev libgdal-dev libfl-dev
     
      - name: Set PATH
        run: echo "$GITHUB_PATH:$prefix/deps/bin:$prefix/bin" >> $GITHUB_PATH
        
      - name: cache-deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: $prefix/deps
          key: deps-${{ runner.os }}

      - name: testing
        run: |
          cd $prefix/deps
          ls 

      # - name: build dependencies
      #   if: steps.cache-deps.outputs.cache-hit != 'true'
      #   run: |
      #     git clone https://github.com/OPENDAP/hyrax-dependencies
      #     cd hyrax-dependencies
      #     git checkout gdal314
      #     make --jobs=$jobs
      #     gdal-config --formats
          

      # - name: cache-libdap4
      #   id: cache-libdap4
      #   uses: actions/cache@v2
      #   with:
      #     path: $prefix
      #     key: libdap4-${{ runner.os }}

      # - name: build libdap4
      #   if: steps.cache-libdap4.outputs.cache-hit != 'true'
      #   run: |
      #     git clone https://github.com/OPENDAP/libdap4
      #     cd libdap4
      #     autoreconf --force --install --verbose
      #     ./configure --prefix=$prefix --enable-developer
      #     make --jobs=$jobs
      #     make check --jobs=$jobs
      #     make install
          

      # - name: build bes
      #   run: |
      #     git clone https://github.com/OPENDAP/bes
      #     cd bes
      #     git submodule update --init
      #     autoreconf --force --install --verbose
      #     ./configure --prefix=$prefix --with-dependencies=$prefix/deps --enable-developer
      #     make --jobs=$jobs
      #     make install

      # - name: checkout
      #   uses: actions/checkout@v2

      # - name: autoreconf
      #   run: autoreconf --force --install --verbose

      # - name: configure
      #   run: ./configure --prefix=$prefix --with-dependecies=$prefix/deps --enable-developer

      # - name: Make
      #   run: make --jobs=$jobs

      # - name: Check
      #   run: make --jobs=$jobs check

      # - name: Install
      #   run: make install

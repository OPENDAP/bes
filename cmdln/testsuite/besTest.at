# Process with autom4te to create an -*- Autotest -*- test suite.


# ------------------------------
#

AT_INIT([bescmdln])
# AT_COPYRIGHT([])

AT_TESTED([bescmdln])

AT_ARG_OPTION_ARG([generate g],
    [  -g arg, --generate=arg   Build the baseline file for test 'arg'],
    [if ./generate_metadata_baseline.sh $at_arg_generate; then
         echo "Built baseline for $at_arg_generate"
     else
         echo "Could not generate baseline for $at_arg_generate"
     fi     
     exit],[])

AT_ARG_OPTION_ARG([generate-data a],
    [  -a arg, --generate-data=arg   Build the baseline file for test 'arg'],
    [if ./generate_data_baseline.sh $at_arg_generate_data; then
         echo "Built baseline for $at_arg_generate_data"
     else
         echo "Could not generate baseline for $at_arg_generate_data"
     fi     
     exit],[])
     
# Usage: _AT_TEST_*(<bescmd source>, <baseline file>)

m4_define([_AT_BESCMD_TEST],   
[AT_CHECK([bescmdln -h localhost -p 10022 -i $1 || true], [], [stdout], [stderr])
AT_CHECK([diff -b -B $2 stdout || diff -b -B $2 stderr], [], [ignore],[],[])
AT_XFAIL_IF([test "$3" = "xfail"])
])

m4_define([AT_BESCMD_DAS_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([das])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_DDS_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([dds])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_DDX_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([ddx])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_INFO_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([info])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_HTML_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([html])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_ASCII_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([ascii])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_SHOW_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([show])
_AT_BESCMD_TEST($abs_srcdir/$1, $abs_srcdir/$1.baseline, $2)
AT_CLEANUP]
])

m4_define([AT_BESCMD_BINARYDATA_RESPONSE_TEST],
[AT_SETUP([BESCMD $1])
AT_KEYWORDS([data])
AT_CHECK([bescmdln -h localhost -p 10022 -i $abs_srcdir/$1 | getdap -M - || true], [], [stdout], [stderr])
AT_CHECK([diff -b -B $abs_srcdir/$1.baseline stdout || diff -b -B $abs_srcdir/$1.baseline stderr], [], [ignore],[],[])
AT_CLEANUP]
])

AT_BESCMD_DAS_RESPONSE_TEST([ff/1998-6-avhrr.dat.0.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([ff/1998-6-avhrr.dat.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ff/1998-6-avhrr.dat.2.bescmd], [pass])
AT_BESCMD_INFO_RESPONSE_TEST([ff/1998-6-avhrr.dat.3.bescmd], [pass])
# AT_BESCMD_HTML_RESPONSE_TEST([ff/1998-6-avhrr.dat.4.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ff/1998-6-avhrr.dat.5.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ff/1998-6-avhrr.dat.6.bescmd])
AT_BESCMD_DDS_RESPONSE_TEST([ff/1998-6-avhrr.dat.7.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ff/1998-6-avhrr.dat.8.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ff/1998-6-avhrr.dat.9.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ff/1998-6-avhrr.dat.a.bescmd])

AT_BESCMD_DAS_RESPONSE_TEST([ff/avhrr.dat.0.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([ff/avhrr.dat.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ff/avhrr.dat.2.bescmd], [pass])
AT_BESCMD_INFO_RESPONSE_TEST([ff/avhrr.dat.3.bescmd], [pass])
# AT_BESCMD_HTML_RESPONSE_TEST([ff/avhrr.dat.4.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ff/avhrr.dat.5.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ff/avhrr.dat.6.bescmd])
AT_BESCMD_DAS_RESPONSE_TEST([ff/gsodock.dat.0.bescmd], [pass])

AT_BESCMD_DDS_RESPONSE_TEST([ff/gsodock.dat.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ff/gsodock.dat.2.bescmd], [pass])
AT_BESCMD_INFO_RESPONSE_TEST([ff/gsodock.dat.3.bescmd], [pass])
# AT_BESCMD_HTML_RESPONSE_TEST([ff/gsodock.dat.4.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ff/gsodock.dat.5.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ff/gsodock.dat.6.bescmd])
AT_BESCMD_DDS_RESPONSE_TEST([ff/gsodock.dat.7.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ff/gsodock.dat.8.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ff/gsodock.dat.9.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ff/gsodock.dat.a.bescmd])

AT_BESCMD_DAS_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.0.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.2.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.3.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.4.bescmd], [pass])
AT_BESCMD_INFO_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.5.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.6.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([hdf4/1990104h09da-gdm.hdf.7.bescmd])

AT_BESCMD_DAS_RESPONSE_TEST([hdf4/S2000415.HDF.0.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([hdf4/S2000415.HDF.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([hdf4/S2000415.HDF.2.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([hdf4/S2000415.HDF.3.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([hdf4/S2000415.HDF.4.bescmd])

# 12.28.12 jhrg. The hdf5 handlers is calling all its datasets
# 'virtual' and THG has completely revamped the tests, so the 
# tcompoind.h5 file isn't there anyway. 
# AT_BESCMD_DAS_RESPONSE_TEST([hdf5/tcompound.h5.0.bescmd], [pass])
# AT_BESCMD_DDS_RESPONSE_TEST([hdf5/tcompound.h5.1.bescmd], [pass])
# AT_BESCMD_DDX_RESPONSE_TEST([hdf5/tcompound.h5.2.bescmd], [pass])
# AT_BESCMD_INFO_RESPONSE_TEST([hdf5/tcompound.h5.3.bescmd], [pass])
# AT_BESCMD_ASCII_RESPONSE_TEST([hdf5/tcompound.h5.4.bescmd], [pass])
# AT_BESCMD_BINARYDATA_RESPONSE_TEST([hdf5/tcompound.h5.5.bescmd])

AT_BESCMD_DAS_RESPONSE_TEST([nc/fnoc1.nc.0.bescmd], [pass])
AT_BESCMD_DDS_RESPONSE_TEST([nc/fnoc1.nc.1.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([nc/fnoc1.nc.2.bescmd], [pass])
AT_BESCMD_INFO_RESPONSE_TEST([nc/fnoc1.nc.3.bescmd], [pass])
# AT_BESCMD_HTML_RESPONSE_TEST([nc/fnoc1.nc.4.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([nc/fnoc1.nc.5.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([nc/fnoc1.nc.6.bescmd])

AT_BESCMD_DDS_RESPONSE_TEST([ssfunc/ff_date_func.0.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ssfunc/ff_date_func.1.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/ff_date_func.2.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/ff_date_func.3.bescmd])
AT_BESCMD_DDS_RESPONSE_TEST([ssfunc/ff_date_func.4.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ssfunc/ff_date_func.5.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/ff_date_func.6.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/ff_date_func.7.bescmd])

AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_badargs.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_basic.0.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/geogrid_func_basic.1.bescmd])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_swapcoords.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_timeselect.0.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/geogrid_func_timeselect.1.bescmd])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_timeselect.2.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/geogrid_func_timeselect.3.bescmd])
AT_BESCMD_DDS_RESPONSE_TEST([ssfunc/geogrid_func_wholearray.0.bescmd], [pass])
AT_BESCMD_DDX_RESPONSE_TEST([ssfunc/geogrid_func_wholearray.1.bescmd], [pass])
AT_BESCMD_ASCII_RESPONSE_TEST([ssfunc/geogrid_func_wholearray.2.bescmd], [pass])
AT_BESCMD_BINARYDATA_RESPONSE_TEST([ssfunc/geogrid_func_wholearray.3.bescmd])

AT_BESCMD_SHOW_RESPONSE_TEST([show/show_01.bescmd], [xfail])
AT_BESCMD_SHOW_RESPONSE_TEST([show/show_02.bescmd], [xfail])
AT_BESCMD_SHOW_RESPONSE_TEST([show/show_03.bescmd], [xfail])


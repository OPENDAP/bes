
# Tcl/Expect code for the writeval test.
#
# $Id: unix.exp 12056 2005-09-01 19:10:10Z jimg $

# Compare $expected to the global $comp_output. Run `pass' if they match,
# `fail' otherwise unless `xfailp' is true in which case run `xfail' if they
# do not match. $msg is the name of the test to print when calling pass, fail
# or xfail.
#
# NB: $expected may be either a string or a file name. If it is the latter,
# read the file and compare its contents to $comp_output.

# Read the common code for tests.

if {[file exists common_tests.exp]} {
    source common_tests.exp
} else {
    send_user "Could not load common tests!"
    exit(1)
}

# The four `required' procs are _start, _load, _exit and _version.
# set 'is_data' to 'data' when testing data results (although any value
# other than 'no' will work).

proc besstandalone_start { {script ""} {is_data "no"} } {
    global verbose
    global comp_output
    global spawn_id

    if {$verbose >= 1} {
        send_user "Testing besstandalone -c bes.conf -i $script"
        if {[string compare $is_data "no"] == 0} {
            send_user " ...\n"
        } else {
            send_user " | getdap -M - ...\n"
        }
        exp_internal 1
    }

    if {[string compare $is_data "no"] == 0} {
        catch "exec besstandalone -c bes.conf -i $script" comp_output
    } else {
        catch "exec besstandalone -c bes.conf -i $script | getdap -M -" comp_output
    }
}

proc besstandalone_load {} {
}

proc besstandalone_exit {} {
    send -raw ""
}

proc besstandalone_version {} {
    send_user "besstandalone test suite 1.1.0\n"
}


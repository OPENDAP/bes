
# Tcl/Expect code for the geturl test. This really is designed to test the
# various servers (hdf, dsp, netcdf, matlab, ...) on serveral different
# platforms. 
# 
# $Id$

# Compare $expected to the global $comp_output. Run `pass' if they match,
# `fail' otherwise unless `xfailp' is true in which case run `xfail' if they
# do not match. $msg is the name of the test to print when calling pass, fail
# or xfail.
# 
# NB: $expected may be either a string or a file name. If it is the latter,
# read the file and compare its contents to $comp_output.

if {[file exists hdf-testsuite/common_tests.exp]} {
    source hdf-testsuite/common_tests.exp
} elseif {[file exists common_tests.exp]} {
    source common_tests.exp
} else {
    send_user "Could not load common tests!\n"
    exit
}

global PROG
if ![info exists PROG] then {
    set PROG [transform ./dap_hdf4_handler]
}

# The four `required' procs are _start, _load, _exit and _version.

proc dap_hdf4_handler_start { text_or_bin {switches ""} {data ""}} {
    global verbose
    global PROG
    global comp_output
    global spawn_id

# exp_internal 1

    exec mkdir -p hdf-testsuite/cache
    if {[string compare $text_or_bin "-t"] == 0} {
    	if {$verbose >= 1} {
    	    send_user "Testing $PROG $switches $data\n"
    	}
	catch "exec $PROG $switches {$data}" comp_output
    } else {
    	if {$verbose >= 1} {
    	    send_user "Testing $PROG $switches $data | getdap -\n"
    	}
	catch "exec $PROG $switches {$data} | getdap -" comp_output
    }
}

proc dap_hdf4_handler_load {} {
}

proc dap_hdf4_handler_exit {} {
    send_user "Running 'rm -rf cache' now\n"
    exec rm -rf hdf-testsuite/cache
}

proc dap_hdf4_handler_version {} {
    send_user "geturl test suite 2.0\n"
}

proc dap_hdf4_handler_all {path dataset {constraint ""} {xfailp 0}} {
    dap_hdf4_handler_start "-t" "-o das -r hdf-testsuite/cache" "${path}/${dataset}.hdf"
    compare_stdout "hdf-testsuite/${dataset}.das" "${dataset} DAS" $xfailp match
    
    dap_hdf4_handler_start "-t" "-o dds -r hdf-testsuite/cache" "${path}/${dataset}.hdf"
    compare_stdout "hdf-testsuite/${dataset}.dds" "${dataset} DDS" $xfailp match
    
    dap_hdf4_handler_start "-b" "-o dods -r hdf-testsuite/cache -e \"${constraint}\"" "${path}/${dataset}.hdf"
    compare_stdout "hdf-testsuite/${dataset}.data" "${dataset} Data" $xfailp
}

proc dap_hdf4_handler_subset {path dataset constraint {num "1"}} {
    dap_hdf4_handler_start "-b" "-o dods -r hdf-testsuite/cache -e \"${constraint}\"" "${path}/${dataset}.hdf"
    compare_stdout "hdf-testsuite/${dataset}.data${num}" "${dataset} Subset"
}

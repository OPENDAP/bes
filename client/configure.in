dnl -*- m4 -*-
dnl Process this file with autoconf to produce a configure script.

AC_INIT(DODSClient.h)
AC_CONFIG_AUX_DIR(../../../etc) 
AC_CONFIG_HEADER(DODSClientConfig.h)

AC_PREFIX_DEFAULT("/usr/local")

AC_MSG_CHECKING(for the compiler flags)
case "${host_cpu}:${host_vendor}:${host_os}" in
     powerpc:apple:netbsd*)
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
     alphaev56:dec:osf5.*)
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
    *:*:*)
       CFLAGS=${CFLAGS-"-gstabs -O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-gstabs -O2 $CXXFLAGS"}
       break;;
esac
AC_MSG_RESULT(Setting CXXFLAGS to $CXXFLAGS)
AC_SUBST(CXXFLAGS)

AC_MSG_CHECKING(for the C++ compiler)
CXX=${CXX-g++}
AC_MSG_RESULT(setting CXX to $CXX)
AC_SUBST(CXX)

depend=${DODS_ROOT}/etc/depend.sh
AC_MSG_RESULT(setting depend to $depend)
AC_SUBST(depend)

AC_LANG_CPLUSPLUS

AC_MSG_CHECKING(for socklen_t)
AC_CACHE_VAL(ppt_socklen_t,
    [
	AC_TRY_COMPILE(
	    [#include <sys/types.h>
#include <sys/socket.h>],
	    [socklen_t foo;],
	    [ppt_socklen_t=yes],
	    [ppt_socklen_t=no]
	)
    ]
)
AC_MSG_RESULT(set ppt_socklen_t to $ppt_socklen_t)
if test $ppt_socklen_t = yes ; then
  AC_DEFINE(_OS_HAS_SOCKLEN_T)
fi

dnl     lets see if accept uses socklen_t
dnl 
AC_CACHE_VAL(ppt_accept_using_socklen_t,
    [
	AC_TRY_COMPILE(
	    [
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
	    ],
	    [
struct sockaddr_in from; 
int len_from=sizeof(from);
int _socket;
int msgsock=accept(_socket,(struct sockaddr *)&from, (socklen_t *)&len_from);
	    ],
	    [ppt_accept_using_socklen_t=yes],
	    [ppt_accept_using_socklen_t=no]
	)
    ]
)
AC_MSG_RESULT(does accept use socklen_t...$ppt_accept_using_socklen_t)
if test $ppt_accept_using_socklen_t = yes ; then
  AC_DEFINE(_ACCEPT_USES_SOCKLEN_T)
fi

dnl     lets see if getsockname uses socklen_t
dnl 
AC_CACHE_VAL(ppt_getsockname_using_socklen_t,
    [
	AC_TRY_COMPILE(
	    [
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
	    ],
	    [
struct sockaddr_in server;
int length =sizeof (server);
int _socket;
getsockname(_socket,(struct sockaddr *)&server,(socklen_t *)&length);
	    ],
	    [ppt_getsockname_using_socklen_t=yes],
	    [ppt_getsockname_using_socklen_t=no]
	)
    ]
)
AC_MSG_RESULT(does getsockname use socklen_t...$ppt_getsockname_using_socklen_t)
if test $ppt_getsockname_using_socklen_t = yes ; then
  AC_DEFINE(_GETSOCKNAME_USES_SOCKLEN_T)
fi

AC_LANG_C
AC_DEFINE(DODS_C_CONTROL)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_MAKE_SET

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h sys/types.h sys/socket.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.
AC_CHECK_FUNCS(strerror)

AC_OUTPUT(Makefile)

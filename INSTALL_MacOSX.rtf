{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
	$Id: INSTALL 16473 2007-05-14 22:03:25Z jimg $\
\
---------------------------------------------------------------------------\
\
INSTALLING THE SOFTWARE\
AFTER INSTALLING\
EQUIREMENTS\
NOTES\
CONFIGURATION AND TESTING\
\
---------------------------------------------------------------------------\
\
INSTALLING THE SOFTWARE\
\
  To install the bes simply double click on the bes .pkg\
  file included in the disk image (.dmg file). You will need root access in\
  order to install this package, as it is in stalled in the /usr root\
  directory. Follow the directions and the software will be installed.\
\
  What gets installed:\
\
    * Under /usr/bin\
        * bes-config - used to determine the locations and options for building against\
           the BES code.\
        * besctl - used to start, stop, restart the BES\
        * hyraxctl - used to start, stop, restart all if Hyrax (OLFS and BES)\
        * besdaemon - the daemon is used to make sure that there is a BES listener\
           running. If the main listener goes down for any reason the daemon will start a\
           new one.\
        * beslistener - process that waits for requests from a client of the BES and\
           handles that request.\
        * besregtest - test application for the configuration file regular expressions\
        * besCreateModule - a script to help developers create new BES modules\
    * Under /usr/etc/bes\
        * bes.conf - configuration file for the BES. Specified user and group to run the\
           BES, catalog information, data root directories, what modules to load into the\
           BES.\
    * Under /usr/include/bes\
        * BES include files used by developers to develop new modules\
    * Under /usr/lib\
        * libbes_dispatch - core library of the BES\
        * libbes_dap - code specific for the BES to provide DAP2 responses\
        * libbes_command - core commands to the BES\
        * libbes_ppt - PPT (transport protocol) library used by the BES\
    * Under /usr/lib/bes\
        * shared object modules usually go here. For example, if libdap is installed on\
           your system you will see a libdap_module shared object module. If you\
           install the netcdf data handler you will find the libnc_module shared object\
           module.\
    * Under /usr/share/bes\
        * help files for the BES and, if libdap is installed on your system, dap help files\
        * templates - directory that holds template files used by besCreateModule\
    * Under /usr/var/run\
       This is the directory where the bes.pid file will be placed, unless otherwise\
       specified by the -r option to the bes control script besctl.\
\
AFTER INSTALLING\
\
  o See the CONFIGURATION section once you have finished installing the BES.\
\
  o Set PATH environment variable to include the bin directory of where\
  bes was installed. For example, if using the default installation\
  directory, which is /usr, make sure that /usr/bin is on your path.\
\
  o Set LD_LIBRARY_PATH environment variable to include the lib directory of\
  where bes was installed. For example, if using the default installation\
  directory, which is /usr, make sure that /usr/lib is part of\
  LD_LIBRARY_PATH.\
\
  o Once installed you will start and stop the BES using the besctl script located in\
   the installation directories bin directory. YOU MUST BE ROOT OR HAVE SUDO\
   PRIVILEGES TO START THE BES. To start the BES:\
\
  besctl start\
\
  To stop the BES:\
\
  besctl stop\
\
  Note: Stopping the BES only stops the daemon and the main listener. If you\
  have clients connected to the BES then the listeners handling requests\
  from those clients will remain up until the connections are closed. This\
  is only the case in the servers 'multiple' mode and not its 'single' mode\
  (refer to the BES configuration file for more on this topic).\
\
\
REQUIREMENTS\
\
  o You will need a copy of the readline library. You can get a copy\
    from http://cnswww.cns.cwru.edu/~chet/readline/rltop.html.\
\
  o The library uses libdap, but is not required. You will need version\
    3.7.10 or greater to build this software. See\
    http://www.opendap.org/download/. Since libdap uses libcurl and libxml2,\
    you will need these libraries, too. See the libdap installation instructions for\
    what versions of these two packages is required.\
\
  o If building new code using the BES you should have gcc/g++ 3.3.x or greater.\
     You'll also need to get the stdc++ library that matches the compiler (whatever\
     version). NB: gcc 2.8.x and earlier *won't* build the software. We're working on\
     modifying the software so that it will build with a variety of compilers. As of\
     11/28/07 we have built the code using GNU gcc/++ 3.2.1, 3.3, 3.4 and 4.0\
\
NOTES\
\
  o DEBUGGING AIDS\
\
    - Debugging is built in to the BES and does not require any special\
      debug flags during compile time. To activate debugging in the BES,\
      simpy use the -d "cerr|<filename>,context1,context2,...,contextn" option\
      to besctl, besdaemon, and beslistener. You should just need to use besctl. You\
      can either specify cerr or a file name with the -d option. If you specify cerr then\
      debug output will go to standard error. If you specify a file name, then debug\
      output will go to that file. You can not specify cout, as standard output is\
      redirected to the socket. The context options for -d can be obtained by running\
      besctl start -h\
\
    - You can also check the BES log file, where the location is specified\
      in the BES configuration file. There might be some useful information\
      in that file.\
\
CONFIGURATION AND TESTING\
\
  o CONFIGURATION\
\
    - For information on configuration, please refer to README_MacOSX.rtf file\
\
  o TESTING\
\
    - For information on testing, please refer to the README_MacOSX.rtf file\
\
\
}